// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskApi.DataAcses;

namespace TaskApi.DataAcses.Migrations
{
    [DbContext(typeof(TodoDbcontext))]
    [Migration("20231207160125_AuthorAndData")]
    partial class AuthorAndData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TaskApi.Models.Author", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            id = 1,
                            FullName = "kaveesha"
                        },
                        new
                        {
                            id = 2,
                            FullName = "Thathsara"
                        },
                        new
                        {
                            id = 3,
                            FullName = "Sandaru"
                        },
                        new
                        {
                            id = 4,
                            FullName = "Nimesh"
                        });
                });

            modelBuilder.Entity("TaskApi.Models.Todo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Authorid")
                        .HasColumnType("int");

                    b.Property<DateTime>("create")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("due")
                        .HasColumnType("datetime2");

                    b.Property<int>("ststus")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Authorid");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Authorid = 1,
                            create = new DateTime(2023, 12, 7, 21, 31, 24, 718, DateTimeKind.Local).AddTicks(4641),
                            description = "Get books fro the School new",
                            due = new DateTime(2023, 12, 12, 21, 31, 24, 719, DateTimeKind.Local).AddTicks(989),
                            ststus = 0,
                            title = "Gets book new from SQl"
                        },
                        new
                        {
                            id = 2,
                            Authorid = 1,
                            create = new DateTime(2023, 12, 7, 21, 31, 24, 719, DateTimeKind.Local).AddTicks(1545),
                            description = "Get spare arts for vehichel new",
                            due = new DateTime(2023, 12, 11, 21, 31, 24, 719, DateTimeKind.Local).AddTicks(1548),
                            ststus = 0,
                            title = "Get car parts new from Sql"
                        },
                        new
                        {
                            id = 3,
                            Authorid = 2,
                            create = new DateTime(2023, 12, 7, 21, 31, 24, 719, DateTimeKind.Local).AddTicks(1552),
                            description = "Get foods for the week new",
                            due = new DateTime(2023, 12, 10, 21, 31, 24, 719, DateTimeKind.Local).AddTicks(1553),
                            ststus = 0,
                            title = "Get Food New from Sql"
                        },
                        new
                        {
                            id = 4,
                            Authorid = 3,
                            create = new DateTime(2023, 12, 7, 21, 31, 24, 719, DateTimeKind.Local).AddTicks(1555),
                            description = "Get medicine Hosptiale new",
                            due = new DateTime(2023, 12, 8, 21, 31, 24, 719, DateTimeKind.Local).AddTicks(1555),
                            ststus = 0,
                            title = "Get Medicine new from Sql"
                        });
                });

            modelBuilder.Entity("TaskApi.Models.Todo", b =>
                {
                    b.HasOne("TaskApi.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("Authorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
